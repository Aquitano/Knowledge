---
import type { ArticleFrontmatter } from '../../lib/types';
import { getShortDescription, processArticleDate } from '../../lib/utils';
import Prose from '../Prose.astro';
import TableOfContents from './TableOfContents.astro';
import ShareButtons from './ShareButtons.astro';

interface Props {
    frontmatter: ArticleFrontmatter;
    headings: { depth: number; slug: string; text: string }[];
    url: string;
}

const { frontmatter, headings, url } = Astro.props;
const articleDate = processArticleDate(frontmatter.timestamp);
---

<article class="blog-post">
    <header class="mb-10">
        <h1 class="font-display mb-4 text-3xl leading-tight sm:text-4xl sm:leading-tight">
            {frontmatter.title}
        </h1>

        <div class="mb-6 flex items-center gap-3 text-sm text-neutral-600 dark:text-neutral-400">
            {
                frontmatter.author && (
                    <div class="flex items-center gap-2">
                        {frontmatter.avatar && (
                            <img src={frontmatter.avatar} alt={frontmatter.author} class="h-6 w-6 rounded-full" />
                        )}
                        <span>{frontmatter.author}</span>
                        <span class="text-neutral-300 dark:text-neutral-600">•</span>
                    </div>
                )
            }
            <time datetime={frontmatter.timestamp}>{articleDate}</time>
            <span class="text-neutral-300 dark:text-neutral-600">•</span>
            <span>{frontmatter.time} min read</span>
        </div>

        {
            frontmatter.cover && (
                <div class="mb-8 overflow-hidden rounded-lg">
                    <img src={frontmatter.cover} alt={frontmatter.title} class="h-auto w-full object-cover" />
                    {frontmatter.coverCredit && (
                        <p class="mt-2 text-xs text-neutral-500 italic">{frontmatter.coverCredit}</p>
                    )}
                </div>
            )
        }

        {
            frontmatter.tags && frontmatter.tags.length > 0 && (
                <div class="mb-8 flex flex-wrap gap-2">
                    {frontmatter.tags.map((tag) => (
                        <a
                            href={`/tags/${tag.toLowerCase()}`}
                            class="hover:bg-primary/20 hover:text-primary dark:hover:bg-primary/20 dark:hover:text-primary rounded-md bg-neutral-100 px-2 py-1 text-xs transition-colors dark:bg-neutral-800"
                        >
                            {tag}
                        </a>
                    ))}
                </div>
            )
        }

        {
            frontmatter.description && (
                <p class="border-primary/30 border-l-4 pl-4 text-lg leading-relaxed text-neutral-600 italic dark:text-neutral-300">
                    {getShortDescription(frontmatter.description)}
                </p>
            )
        }
    </header>

    <div class="lg:grid lg:grid-cols-[1fr_220px] lg:gap-8">
        <Prose>
            <slot />
        </Prose>

        <aside class="hidden lg:block">
            <div class="sticky top-24">
                <TableOfContents headings={headings} />
                <ShareButtons title={frontmatter.title} url={url} />
            </div>
        </aside>
    </div>

    <footer class="mt-12 border-t border-neutral-200 pt-8 dark:border-neutral-800">
        <div class="mt-8 flex flex-col items-start justify-between gap-4 sm:flex-row sm:items-center">
            <a href="/" class="text-primary flex items-center gap-1 hover:underline">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                >
                    <path d="m15 18-6-6 6-6"></path>
                </svg>
                Back to all articles
            </a>
            <a href="#top" class="text-primary flex items-center gap-1 hover:underline">
                Back to top
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                >
                    <path d="m18 15-6-6-6 6"></path>
                </svg>
            </a>
        </div>
    </footer>
</article>
